module OperatorExpression

imports
  AssignmentExpression
  Primary
  

context-free syntax
  
  OpExp.Assign = AssignmentExp
  OpExp.UnOp = UnOpExp
  
  OpExpList.OpExpList = {OpExp ","}+
  
  UnOpExp.UnExp = UnaryExpression       {prefer}
  UnOpExp.UnMinExp = UnaryMinExpression
  
  UnaryMinExpression.Power = PowerExpression
  UnaryMinExpression.MinPower = <- <PowerExpression>>
  
  UnaryExpression.Primary = Primary
  UnaryExpression.Neg = <~<UnaryExpression>>
  UnaryExpression.Plus = <+<UnaryExpression>>
  UnaryExpression.Not = <!<UnaryExpression>>
  
  PowerExpression.UnExp = UnaryExpression
  PowerExpression.PowerExp = <<UnaryExpression> ** <PowerExpression>>