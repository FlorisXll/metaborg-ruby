module Primary

imports
  BodyStatement
  Break
  Class
  CompoundStatement
  ConditionalExpression
  Constructors
  DefinedExpression
	Identifier
	IterationExpression
  Expression
	Literal
	Method
	Module
	Next
	Redo
	Retry
	Return
	Separator
	Statement
	Variable
	Yield
	
// Primary stands for the primary expressions in Ruby 
context-free syntax

	Primary.LiteralPrim = Literal
	Primary.VarRefPrim = Var
	Primary.ScopedVarRefPrim = ScopedConstantReference
	Primary.ConstPrim = <<Primary> :: <ID>>
	Primary.IfPrim = IfExp
	Primary.UnlessPrim = UnlessExp
	Primary.CasePrim = CaseExp
	Primary.WhilePrim = WhileExp
	Primary.UntilPrim = UntilExp
	Primary.ForPrim = ForExp {prefer}
	
	// TODO: no line-terminator between class-name and superclass
	Primary.ClassPrim = ClassDef
	Primary.SingletonClassPrim = SingletonClassDef
	Primary.ModulePrim = ModuleDef
	Primary.MethodPrim = MethodDef
	Primary.SingletonMethodPrim = SingletonMethodDef
	Primary.YieldPrim = YieldWithOptionalArgument
	
	Primary.ReturnPrim = ReturnWithoutArgument
	Primary.BreakPrim = BreakWithoutArgument
	Primary.NextPrim = NextWithoutArgument
	Primary.RedoPrim = Redo
	Primary.RetryPrim = Retry
	
	// Constructors
	Primary.ArrayPrim = ArrayConstructor
	//Primary.HashPrim = HashConstructor
  Primary.RangePrim = RangeConstructor
  
  Primary.DefinedPrim = DefinedWithParentheses
  
  // Primary allows grouping
  Primary.GroupExp = <( <Exp> )>
  Primary.GroupCStmt = <( <CStmt> )>
  
  Primary.MethodInvocPrim = PrimaryMethodInvocation
  
	
	
