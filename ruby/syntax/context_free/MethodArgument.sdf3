module MethodArgument

imports

  Command
  HashConstructor
  Method
  Expression
  Whitespace

context-free syntax

  MethodArgument.MethodArgWithoutPar = ArgumentWithoutParentheses
//  MethodArgument.MethodArgWithPar =
  MethodArgument.IndexArgList = IndexingArgumentList
  
  IndexingArgumentList = Command
  IndexingArgumentList.OpExpList = ExpressionList OptionalComma?
  IndexingArgumentList.SplatOpExpList = ExpressionList "," SplattingArgument
  IndexingArgumentList.IndexAssocList = AssociationList OptionalComma?
  IndexingArgumentList.SplatOpExp = SplattingArgument
  OptionalComma.Comma = ","
  
  ArgumentWithParentheses.Pars = "("")"
  ArgumentWithParentheses.ArgList = <( <ArgumentList> )>
  ArgumentWithParentheses.ExpList = <( <Exp>, <ChainedCommandWithDoBlock> )>
  ArgumentWithParentheses.ArgsParChained =
    <( <ChainedCommandWithDoBlock> )>
  
  // Lookahead not in { '{' } 
  ArgumentWithoutParentheses.ArgWithoutPar = ArgumentList
  
    
  
  SplattingArgument.SplatArg = <* <Exp>>
  BlockArgument.BlockArg = <& <Exp>>
  
  ArgumentList.BlockArgList =  <<BlockArgument>>
  ArgumentList.CommandArgList = <<Command>>
  
syntax

  ExpressionList-CF.ExpList = Exp-CF ExpressionArgumentOptionalList-CF
  ExpressionArgumentOptionalList-CF.ListEnd =
  ExpressionArgumentOptionalList-CF.ListItem = LAYOUT-NO-NEWLINE*-LEX "," LAYOUT?-CF Exp-CF ExpressionArgumentOptionalList-CF
  
  ArgumentList-CF.SplatArgList = SplattingArgument-CF BlockArgumentOptional?-CF
  ArgumentList-CF.ExpAssocArgList = ExpressionList-CF LAYOUT-NO-NEWLINE*-LEX "," LAYOUT?-CF AssociationList-CF SplattingArgumentOptional?-CF BlockArgumentOptional?-CF
  ArgumentList-CF.ExpArgList = ExpressionList-CF SplattingArgumentOptional?-CF BlockArgumentOptional?-CF
  ArgumentList-CF.AssocArgList = AssociationListNonEmpty-CF SplattingArgumentOptional?-CF BlockArgumentOptional?-CF
  
  SplattingArgumentOptional-CF.SplatArgOptional = LAYOUT-NO-NEWLINE*-LEX "," LAYOUT?-CF SplattingArgument-CF
  BlockArgumentOptional-CF.BlockArgOptional = LAYOUT-NO-NEWLINE*-LEX "," LAYOUT?-CF BlockArgument-CF