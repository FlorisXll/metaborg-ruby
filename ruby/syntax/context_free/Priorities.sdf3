module Priorities

imports
	Argument
	BinaryOperatorExpression
	Constructors
	LogicalExpression
	UnaryOperatorExpression
	
// Precedence source: http://ruby-doc.org/core-2.5.1/doc/syntax/precedence_rdoc.html
// Associativity source: https://en.wikibooks.org/wiki/Ruby_Programming/Syntax/Operators
	
context-free priorities

	{right: 
	  OperatorNOTExpression.BoolNotUnOp
	  OperatorNOTExpression.MethodInvoc
	  KeywordNOTExpression.NotMethod
		UnaryExpression.BoolNot
		UnaryExpression.BitNot
		UnaryExpression.UnPlus
		PowerExpression.PowerExp } >
	{right:
		UnaryMinusExpression.MinPower } >
	{left:
		MultiplicativeExpression.Times
		MultiplicativeExpression.Division
		MultiplicativeExpression.Modulo } >
	{left:
		AdditiveExpression.Plus
		AdditiveExpression.Minus } >
	{left:
		BitwiseShiftExpression.BitShiftLeft
		BitwiseShiftExpression.BitShiftRight } >
	{left:
		BitwiseANDExpression.BitAnd } >
	{left:
		BitwiseORExpression.BitOr
		BitwiseORExpression.BitXOr } >
	{left:
		RelationalExpression.Lesser
		RelationalExpression.LesserEq
		RelationalExpression.Greater
		RelationalExpression.GreaterEq } >
	{non-assoc:
		EqualityExpression.Equals
		EqualityExpression.CaseEq
		EqualityExpression.NotEq
		EqualityExpression.PatternMatch
		EqualityExpression.NotPatternMatch
		EqualityExpression.SpaceShip } >
	{left:
		OperatorANDExpression.BoolAnd } >
	{left:
		OperatorORExpression.BoolOr } >
	{non-assoc:
		RangeConstructor.RangeInc
		RangeConstructor.RangeEx } >
//	{right:
//		?: } >
//	{left:
//		rescue } >
	{right:
		//Arg.Assign
		// **=
		// *= 
		// /=
		// %=
		// +=
		// -=
		// <<=
		// >>=
		// &&=
		// &=
		// ||=
		// |=
		// ^=	
	} >
	{non-assoc:
		//Arg.Defined 
		} >
	{right:
		KeywordNOTExpression.Not } >
	{left:
		KeywordANDExpression.And 
		KeywordORExpression.Or } 
//	{non-assoc
//		if
//		unless
//		while
//		until } >
//	{
//		{}-blocks }